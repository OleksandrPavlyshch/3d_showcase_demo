html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; vertical-align: baseline; }

body, html { height: 100%; }

img, fieldset, a img { border: none; }

input[type="text"], input[type="email"], input[type="tel"], textarea { -webkit-appearance: none; }

input[type="submit"], button { cursor: pointer; }

input[type="submit"]::-moz-focus-inner, button::-moz-focus-inner { padding: 0; border: 0; }

textarea { overflow: auto; }

input, button { margin: 0; padding: 0; border: 0; }

div, input, textarea, select, button, h1, h2, h3, h4, h5, h6, a, span, a:focus { outline: none; }

ul, ol { list-style-type: none; }

table { border-spacing: 0; border-collapse: collapse; width: 100%; }

html { box-sizing: border-box; }

*, *:before, *:after { box-sizing: inherit; }

body { font-family: Arial, sans-serif; font-size: 16px; line-height: 1.25; min-width: 320px; min-height: 320px; background-color: #f9f9f9; }

.clearfix { *zoom: 1; }

.clearfix:before, .clearfix:after { display: table; content: ""; line-height: 0; }

.clearfix:after { clear: both; }

a, a:before, .button, button, button:before, input[type="button"], input[type="submit"] { transition: border-color .1s ease-in, color .1s ease-in, background-color .1s ease-in; }

.hide { display: none !important; }

h1 { font-weight: normal; }

<<<<<<< HEAD
.bio-list { position: absolute; right: 70px; top: 240px; text-transform: uppercase; white-space: nowrap; transition: all .6s ease .2s; opacity: 0; }
=======
.bio-list { position: absolute; right: 50px; top: 210px; text-transform: uppercase; white-space: nowrap; transition: all .6s ease .2s; opacity: 0; }
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3

.bio-list_name { vertical-align: top; margin-bottom: 5px; width: 95px; display: inline-block; }

.bio-list_value { display: inline-block; vertical-align: top; width: 25px; color: #c1262a; }

<<<<<<< HEAD
.platform-3d .bio-list { transform: translateZ(120px); opacity: 1; transition: all .6s ease .2s; }

.case-item { height: 100%; position: relative; perspective: 1200px; transform-style: preserve-3d; }

.char { width: 150px; height: 75px; transform-style: preserve-3d; position: absolute; right: 60px; top: 50px; background-color: transparent; background-image: linear-gradient(transparent, #ffffff); vertical-align: middle; border: 1px solid #ffffff; border-width: 0 0 1px 1px; opacity: 0; transition: all .6s ease .2s; }
=======
.platform-3d .bio-list { transform: translateZ(100px); opacity: 1; transition: all .6s ease .2s; }

.case-item { height: 100%; position: relative; perspective: 1200px; transform-style: preserve-3d; }

.char { width: 150px; height: 75px; transform-style: preserve-3d; position: absolute; right: 50px; top: 50px; background-color: transparent; background-image: linear-gradient(transparent, #ffffff); vertical-align: middle; border: 1px solid #ffffff; border-width: 0 0 1px 1px; opacity: 0; transition: all .6s ease .2s; }
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3

.char:after { content: ""; position: absolute; left: 0; bottom: 1px; border-bottom: 1px solid #ffffff; width: 150px; height: 0; background-color: transparent; background-image: linear-gradient(transparent, #ffffff); transition: transform .4s ease; transform: rotateX(-90deg); transform-origin: 0 100% 0; transition: all .6s ease .6s; }

.char:before { content: ""; position: absolute; left: 0; top: 0; border-left: 1px solid #ffffff; width: 0; height: 75px; background-color: transparent; background-image: linear-gradient(transparent, #ffffff); transition: transform .4s ease; transform: rotateY(-90deg); transform-origin: 0 100% 0; transition: all .6s ease .6s; }

.char_line { transition: transform .4s ease; transform: translateZ(10px); }

.char_line-wrap { fill: none; stroke: #c1262a; stroke-width: 2; }

.char_line-wrap line { transition-property: stroke-dashoffset; transition-timing-function: ease; transition-duration: 0.2s; stroke-dasharray: 150 150; stroke-dashoffset: 150; }

.char_line-wrap line:nth-child(1) { transition-delay: 0.2s; }

.char_line-wrap line:nth-child(2) { transition-delay: 0.6s; }

.char_line-wrap line:nth-child(3) { transition-delay: 1s; }

.char_line-wrap line:nth-child(4) { transition-delay: 1.4s; }

.char_line-wrap line:nth-child(5) { transition-delay: 1.8s; }

.char_line-wrap line:nth-child(6) { transition-delay: 2.2s; }

.char_line-wrap line:nth-child(7) { transition-delay: 2.6s; }

.char_line-wrap line:nth-child(8) { transition-delay: 3s; }

.char_line-points-wrap { fill: #c1262a; stroke-width: 0; }

.char_line-points-wrap circle { transition-property: transform; transition-duration: 0.1s; transition-timing-function: ease; transform: scale(0); }

.char_line-points-wrap circle:nth-child(1) { transition-delay: 0s; }

.char_line-points-wrap circle:nth-child(2) { transition-delay: 0.4s; }

.char_line-points-wrap circle:nth-child(3) { transition-delay: 0.8s; }

.char_line-points-wrap circle:nth-child(4) { transition-delay: 1.2s; }

.char_line-points-wrap circle:nth-child(5) { transition-delay: 1.6s; }

.char_line-points-wrap circle:nth-child(6) { transition-delay: 2s; }

.char_line-points-wrap circle:nth-child(7) { transition-delay: 2.4s; }

.char_line-points-wrap circle:nth-child(8) { transition-delay: 2.8s; }

.platform-3d .char { transform: translateZ(100px); opacity: 1; }

.platform-3d .char:after { height: 20px; transition: all .6s ease .6s; }

.platform-3d .char:before { width: 20px; transition: all .6s ease .6s; }

.platform-3d .char_line-points-wrap circle { transform: scaleX(1) scaleY(1); transition-delay: 0; }

.platform-3d .char_line-wrap line { stroke-dashoffset: 0; transition-delay: 0; }

<<<<<<< HEAD
.controls { position: fixed; z-index: 10; right: 15px; top: 30%; line-height: 1; }

.controls_button { display: block; font-size: 12px; padding: 0 7px; text-align: center; line-height: 30px; text-decoration: none; width: 100%; color: #ffffff; background-color: #c1262a; text-transform: uppercase; border-radius: 4px; text-shadow: 0 -1px 1px #a32024; box-shadow: 0 4px 0 #a32024, 0 5px 5px 1px rgba(0, 0, 0, 0.4); transition: all .15s ease-in-out; }

.controls_button:hover { background-color: #d52b30; text-shadow: 0 -1px 1px #b82428; box-shadow: 0 4px 0 #b82428, 0 5px 5px 1px rgba(0, 0, 0, 0.4); }

.controls_button:active, .controls_button.active { margin-bottom: -4px; background-color: #d52b30; margin-top: 4px; box-shadow: none; }
=======
.controls { position: fixed; z-index: 10; right: 15px; top: 30%; }

.controls_button { display: block; font-size: 14px; padding: 0 7px; text-align: center; line-height: 44px; text-decoration: none; width: 100%; color: #ffffff; background-color: #c1262a; text-transform: uppercase; border-radius: 4px; text-shadow: 0 -1px 1px #a32024; box-shadow: 0 4px 0 #a32024, 0 5px 5px 1px rgba(0, 0, 0, 0.4); transition: all .15s ease-in-out; }

.controls_button:hover { background-color: #d52b30; text-shadow: 0 -1px 1px #b82428; box-shadow: 0 4px 0 #b82428, 0 5px 5px 1px rgba(0, 0, 0, 0.4); }

.controls_button:active, .controls_button.active { margin-bottom: -6px; background-color: #d52b30; margin-top: 6px; box-shadow: none; }
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3

.case-item_hero { height: 100%; width: 100%; }

.hero { perspective: 1200px; height: 100%; width: 100%; transform-style: preserve-3d; }

<<<<<<< HEAD
.hero svg { transition: transform 1.4s ease; transform: translateZ(90px); width: 175px; height: 175px; position: absolute; bottom: 0; top: 0; right: 0; left: 0; margin: auto; }
=======
.hero svg { transition: transform 1.4s ease; transform: translateZ(90px); width: 200px; height: 200px; position: absolute; bottom: 0; top: 0; right: 0; left: 0; margin: auto; }
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3

.hero svg path { transition: fill 1.4s ease; }

.hero.hero-is-hide svg path { fill: #000000 !important; }

<<<<<<< HEAD
.pie-char { position: absolute; left: 30px; top: 20px; width: 100px; height: 100px; transition: all .6s ease .2s; opacity: 0; }
=======
.pie-char { position: absolute; left: 20px; top: 20px; width: 100px; height: 100px; transition: all .6s ease .2s; opacity: 0; }
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3

.pie-char_svg { transition: transform 1s ease; border-radius: 50%; position: relative; background: #b2912f; }

.pie-char_svg circle { transition: stroke-dashoffset 1s ease; stroke-width: 100; stroke-dashoffset: -314; stroke-dasharray: 314; transform: rotateZ(-90deg); transform-origin: 50% 50%; fill: transparent; stroke: #60bd68; transition: all .6s ease .2s; }

.platform-3d .pie-char { transform: translateZ(50px); transition: all .6s ease .2s; opacity: 1; }

<<<<<<< HEAD
.platform-3d .pie-char_svg circle { stroke-dashoffset: -413; transition: stroke-dashoffset 1s ease .6s; }
=======
.platform-3d .pie-char_svg circle { stroke-dashoffset: -438; transition: stroke-dashoffset 1s ease .6s; }
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3

.platform { height: 100%; overflow: hidden; position: relative; perspective: 4000px; transform-style: preserve-3d; }

.platform_outer { height: 100%; }

.platform.platform-move .platform_inner { animation: wobble 8s 1s infinite; }

.platform.platform-3d .platform_inner:after { height: 300px; transition: height .4s ease .2s; }

.platform.platform-3d .platform_inner:before { height: 100%; transition: height .4s ease .2s; }

<<<<<<< HEAD
.platform_inner { perspective: 1200px; transform-style: preserve-3d; position: absolute; width: 600px; height: 400px; margin: auto; left: 0; top: 50px; bottom: 0; right: 0; transition: transform .4s ease; transform: translateZ(250px) translateY(-50px); }
=======
.platform_inner { perspective: 1200px; transform-style: preserve-3d; position: absolute; width: 700px; height: 450px; margin: auto; left: 0; top: 50px; bottom: 0; right: 0; transition: transform .4s ease; transform: translateZ(250px) translateY(-50px); }
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3

.platform_inner:after, .platform_inner:before { content: ""; position: absolute; left: 0; bottom: 1px; transition: height .4s ease .2s; width: 100%; height: 0; background-color: #999999; background-image: linear-gradient(#999999, #f9f9f9); transition: height 2.4 ease, transform .4s ease; }

.platform_inner:after { transform: rotateX(-90deg); transform-origin: 0 100% 0; }

@keyframes wobble { 25% { transform: rotateY(-43deg) rotateX(9deg) rotateZ(2deg) translateZ(250px) translateY(-50px); }
  75% { transform: rotateY(38deg) rotateX(11deg) rotateZ(-2deg) translateZ(250px) translateY(-50px); } }

<<<<<<< HEAD
.progres-bar { position: absolute; left: 60px; bottom: 60px; height: 30px; transition: all .6s ease .2s; opacity: 0; }
=======
.progres-bar { position: absolute; left: 40px; bottom: 60px; height: 30px; transition: all .6s ease .2s; opacity: 0; }
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3

.progres-bar_svg { fill: transparent; overflow: hidden; }

.progres-bar_svg-border { stroke: #c1262a; stroke-width: 1; }

.progres-bar_svg-progres { transition: stroke-dashoffset .6s ease; fill: #c1262a; stroke: #c1262a; stroke-width: 20; stroke-dasharray: 150 150; stroke-dashoffset: 150; }

.progres-bar_svg-line { stroke: #c1262a; stroke-width: 1; }

.platform-3d .progres-bar { transform: translateZ(120px); opacity: 1; transition: all .6s ease .2s; }

<<<<<<< HEAD
.platform-3d .progres-bar_svg-progres { stroke-dashoffset: 73px; transition: stroke-dashoffset .6s ease .6s; }
=======
.platform-3d .progres-bar_svg-progres { stroke-dashoffset: 36px; transition: stroke-dashoffset .6s ease .6s; }
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3

@media only screen and (min-device-width: 320px) and (max-device-width: 480px) {

 * { -webkit-text-size-adjust: none; } }

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;base64, */
=======
/*# sourceMappingURL=data:application/json;base64, */
>>>>>>> 6861358748d67fae934588bc99f0e3d01daeddd3
